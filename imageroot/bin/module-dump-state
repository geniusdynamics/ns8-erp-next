#!/bin/bash

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

set -e

# if ! systemctl --user -q is-active erpnext.service; then
# exit 0
# fi

#Creating A manual back up from internal app
SITE="frontend"
BACKUP_FILE="backup_paths.txt"
BASE_DIR="/home/frappe/frappe-bench/sites/"

backup_and_save_paths() {
    local site=$1
    local output

    echo "Listing apps"
    podman exec backend bench list-apps
    podman exec frontend bench list-apps
    echo "Running this command"
    echo "Running backup for site: $site"
    output=$(podman exec backend bench --site "$site" backup --with-files 2>&1)
    echo "Raw backup output: $output"

    if [[ $? -ne 0 ]]; then
        echo "Error during backup: $output"
        exit 1
    fi

    echo "Backup output received."

    # Extract the paths from the output and remove leading ./ and sizes
    # Use grep without lookbehind assertions
    local config_path=$(echo "$output" | grep -o "Config\s*:\s*.*" | awk '{print $2}')
    local db_path=$(echo "$output" | grep -o "Database:\s*.*" | awk '{print $2}')
    local public_archive=$(echo "$output" | grep -o "Public\s*:\s*.*" | awk '{print $2}')
    local private_archive=$(echo "$output" | grep -o "Private\s*:\s*.*" | awk '{print $2}')

    # Validate that paths were extracted correctly
    if [[ -z "$config_path" || -z "$db_path" || -z "$public_archive" || -z "$private_archive" ]]; then
        echo "Error extracting backup paths."
        exit 1
    fi

    # Save the paths to the backup file
    {
        echo "CONFIG_PATH=${BASE_DIR}${config_path}"
        echo "DB_PATH=${BASE_DIR}${db_path}"
        echo "PUBLIC_ARCHIVE=${BASE_DIR}${public_archive}"
        echo "PRIVATE_ARCHIVE=${BASE_DIR}${private_archive}"
    } >"$BACKUP_FILE"

    echo "Backup paths saved to $BACKUP_FILE"
}